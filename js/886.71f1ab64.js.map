{"version":3,"file":"js/886.71f1ab64.js","mappings":"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","sources":["webpack://vue-admin-demo/./src/views/js-view/upload/index.vue?75eb","webpack://vue-admin-demo/./src/api/upload.js","webpack://vue-admin-demo/src/views/js-view/upload/index.vue","webpack://vue-admin-demo/./src/views/js-view/upload/index.vue?dfe3","webpack://vue-admin-demo/./src/views/js-view/upload/index.vue","webpack://vue-admin-demo/./node_modules/spark-md5/spark-md5.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"app-container\"},[_c('input',{attrs:{\"type\":\"file\"},on:{\"change\":_vm.handleFileChange}}),_c('el-button',{on:{\"click\":_vm.handleUpload}},[_vm._v(\"upload\")]),_c('p',{staticClass:\"tips\"},[_vm._v(\"tips:文件大小不得大于100MB,上传一个视频文件查看效果吧\")]),_c('div',[_c('div',[_c('div',[_vm._v(\"文件切片进度\")]),_c('el-progress',{attrs:{\"percentage\":_vm.percentage.slicePercentage}})],1),_c('div',[_c('div',[_vm._v(\"计算文件hash值\")]),_c('el-progress',{attrs:{\"percentage\":_vm.percentage.hashPercentage}})],1),_c('div',[_c('div',[_vm._v(\"文件上传进度\")]),_c('el-progress',{attrs:{\"percentage\":_vm.percentage.uploadPercentage}})],1)]),(_vm.resultURL)?_c('p',{staticClass:\"tips\"},[_vm._v(\" 您的文件上传成功，请访问：\"+_vm._s(_vm.resultURL)+\" \")]):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import request from \"@/utils/request\";\r\n\r\nexport function uploadFile(data) {\r\n  return request({\r\n    url: \"/fileUpload/upload\",\r\n    method: \"post\",\r\n    data,\r\n  });\r\n}\r\n\r\nexport function mergeFile(data) {\r\n  return request({\r\n    url: \"/fileUpload/merge\",\r\n    method: \"post\",\r\n    data,\r\n  });\r\n}\r\n","<template>\r\n  <div class=\"app-container\">\r\n    <input type=\"file\" @change=\"handleFileChange\" />\r\n    <el-button @click=\"handleUpload\">upload</el-button>\r\n    <p class=\"tips\">tips:文件大小不得大于100MB,上传一个视频文件查看效果吧</p>\r\n\r\n    <div>\r\n      <div>\r\n        <div>文件切片进度</div>\r\n        <el-progress :percentage=\"percentage.slicePercentage\"></el-progress>\r\n      </div>\r\n      <div>\r\n        <div>计算文件hash值</div>\r\n        <el-progress :percentage=\"percentage.hashPercentage\"></el-progress>\r\n      </div>\r\n      <div>\r\n        <div>文件上传进度</div>\r\n        <el-progress :percentage=\"percentage.uploadPercentage\"></el-progress>\r\n      </div>\r\n    </div>\r\n    <p class=\"tips\" v-if=\"resultURL\">\r\n      您的文件上传成功，请访问：{{ resultURL }}\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport SparkMD5 from \"spark-md5\";\r\nimport { uploadFile, mergeFile } from \"@/api/upload\";\r\n\r\nconst ChunkSize = 1 * 1024 * 1024;\r\nconst MAXFileSize = 100 * 1024 * 1024;\r\n\r\nexport default {\r\n  name: \"Upload\",\r\n  data: () => {\r\n    return {\r\n      container: {\r\n        file: null,\r\n        filename: \"\",\r\n        extension: \"\",\r\n        hash: \"\",\r\n      },\r\n      count: 0, // 用于进行chunk计数\r\n      chunkList: [], // 存放文件切片\r\n      data: [], // 要传递给后端的数据\r\n      spark: null,\r\n      percentage: {\r\n        slicePercentage: 0,\r\n        uploadPercentage: 0,\r\n        hashPercentage: 0,\r\n      },\r\n      resultURL: \"\",\r\n    };\r\n  },\r\n  mounted() {\r\n    this.spark = new SparkMD5.ArrayBuffer();\r\n  },\r\n  methods: {\r\n    calculateMD5() {\r\n      const reader = new FileReader();\r\n      reader.readAsArrayBuffer(this.chunkList[this.count].file);\r\n      reader.onload = (e) => {\r\n        this.count++;\r\n        this.percentage.hashPercentage = this.calculatePercentage(\r\n          this.count,\r\n          this.chunkList.length\r\n        );\r\n        this.spark.append(e.target.result);\r\n        if (this.count === this.chunkList.length) {\r\n          this.container.hash = this.spark.end();\r\n          self.close();\r\n        } else {\r\n          this.calculateMD5();\r\n        }\r\n      };\r\n    },\r\n    calculatePercentage(cur, total) {\r\n      if (cur >= total) {\r\n        cur = total;\r\n      }\r\n      return parseInt((cur / total) * 100);\r\n    },\r\n    // 存储文件对象\r\n    handleFileChange(e) {\r\n      const [file] = e.target.files;\r\n      if (!file) {\r\n        return;\r\n      }\r\n      if (file.size > MAXFileSize) {\r\n        this.$message({\r\n          type: \"error\",\r\n          message: \"文件大小不得大于100MB\",\r\n        });\r\n        return;\r\n      }\r\n      // Object.assign()\r\n      this.container.file = file;\r\n      this.container.filename = file.name.split(\".\")[0];\r\n      this.container.extension = file.name.split(\".\")[1];\r\n      this.chunkList = this.createFileChunk(file);\r\n      this.calculateMD5();\r\n    },\r\n    // 将文件分割为切片列表并返回分割结果\r\n    createFileChunk(file) {\r\n      const fileChunkList = [];\r\n      let cur = 0;\r\n      while (cur < file.size) {\r\n        fileChunkList.push({ file: file.slice(cur, cur + ChunkSize) });\r\n        cur += ChunkSize;\r\n        this.percentage.slicePercentage = this.calculatePercentage(\r\n          cur,\r\n          file.size\r\n        );\r\n      }\r\n      return fileChunkList;\r\n    },\r\n    // 上传所有文件切片\r\n    async uploadChunk() {\r\n      const promises = [];\r\n      this.data.forEach((item, index) => {\r\n        const fd = this.createFormData(item);\r\n        this.percentage.uploadPercentage = this.calculatePercentage(\r\n          index + 1,\r\n          this.data.length\r\n        );\r\n        const promise = uploadFile(fd);\r\n        promises.push(promise);\r\n      });\r\n      // 等待所有请求完成\r\n      await Promise.all(promises);\r\n    },\r\n    // 将数据转换为formaData\r\n    createFormData({ name = \"\", chunk = null, hash = \"\", extension = \"\" }) {\r\n      const fd = new FormData();\r\n      fd.append(\"chunk\", chunk);\r\n      fd.append(\"hash\", hash);\r\n      fd.append(\"filename\", name);\r\n      fd.append(\"extension\", extension);\r\n      return fd;\r\n    },\r\n    // 处理点击上传事件\r\n    async handleUpload() {\r\n      if (!this.container.file) {\r\n        return;\r\n      }\r\n      this.data = this.chunkList.map(({ file }, index) => {\r\n        return {\r\n          chunk: file,\r\n          hash: this.container.hash + \"-\" + index,\r\n          name: this.container.filename,\r\n          extension: this.container.extension,\r\n        };\r\n      });\r\n      await this.uploadChunk();\r\n      await this.mergeRequest();\r\n    },\r\n    // 合并请求\r\n    async mergeRequest() {\r\n      const res = await mergeFile({\r\n        filename: this.container.filename,\r\n        extension: this.container.extension,\r\n        chunkSize: ChunkSize,\r\n      });\r\n      if (res.code === 2000) {\r\n        this.resultURL = res.url;\r\n        this.$message({\r\n          type: \"success\",\r\n          message: \"文件上传成功!\",\r\n        });\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.tips {\r\n  font-size: 12px;\r\n  color: #9e9e9e;\r\n}\r\n</style>\r\n","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=b0610238\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=b0610238&prod&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","(function (factory) {\n    if (typeof exports === 'object') {\n        // Node/CommonJS\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(factory);\n    } else {\n        // Browser globals (with support for web workers)\n        var glob;\n\n        try {\n            glob = window;\n        } catch (e) {\n            glob = self;\n        }\n\n        glob.SparkMD5 = factory();\n    }\n}(function (undefined) {\n\n    'use strict';\n\n    /*\n     * Fastest md5 implementation around (JKM md5).\n     * Credits: Joseph Myers\n     *\n     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n     * @see http://jsperf.com/md5-shootout/7\n     */\n\n    /* this function is much faster,\n      so if possible we use it. Some IEs\n      are the only ones I know of that\n      need the idiotic second function,\n      generated by an if clause.  */\n    var add32 = function (a, b) {\n        return (a + b) & 0xFFFFFFFF;\n    },\n        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\n    function cmn(q, a, b, x, s, t) {\n        a = add32(add32(a, q), add32(x, t));\n        return add32((a << s) | (a >>> (32 - s)), b);\n    }\n\n    function md5cycle(x, k) {\n        var a = x[0],\n            b = x[1],\n            c = x[2],\n            d = x[3];\n\n        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n\n        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n\n        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n\n        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n        b  = (b << 21 | b >>> 11) + c | 0;\n\n        x[0] = a + x[0] | 0;\n        x[1] = b + x[1] | 0;\n        x[2] = c + x[2] | 0;\n        x[3] = d + x[3] | 0;\n    }\n\n    function md5blk(s) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n    }\n\n    function md5blk_array(a) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n        }\n        return md5blks;\n    }\n\n    function md51(s) {\n        var n = s.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        length = s.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n        }\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n        return state;\n    }\n\n    function md51_array(a) {\n        var n = a.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n        }\n\n        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n        // containing the last element of the parent array if the sub array specified starts\n        // beyond the length of the parent array - weird.\n        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\n        length = a.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n        }\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n\n        return state;\n    }\n\n    function rhex(n) {\n        var s = '',\n            j;\n        for (j = 0; j < 4; j += 1) {\n            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    function hex(x) {\n        var i;\n        for (i = 0; i < x.length; i += 1) {\n            x[i] = rhex(x[i]);\n        }\n        return x.join('');\n    }\n\n    // In some cases the fast add32 function cannot be used..\n    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\n        add32 = function (x, y) {\n            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n            return (msw << 16) | (lsw & 0xFFFF);\n        };\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * ArrayBuffer slice polyfill.\n     *\n     * @see https://github.com/ttaubert/node-arraybuffer-slice\n     */\n\n    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n        (function () {\n            function clamp(val, length) {\n                val = (val | 0) || 0;\n\n                if (val < 0) {\n                    return Math.max(val + length, 0);\n                }\n\n                return Math.min(val, length);\n            }\n\n            ArrayBuffer.prototype.slice = function (from, to) {\n                var length = this.byteLength,\n                    begin = clamp(from, length),\n                    end = length,\n                    num,\n                    target,\n                    targetArray,\n                    sourceArray;\n\n                if (to !== undefined) {\n                    end = clamp(to, length);\n                }\n\n                if (begin > end) {\n                    return new ArrayBuffer(0);\n                }\n\n                num = end - begin;\n                target = new ArrayBuffer(num);\n                targetArray = new Uint8Array(target);\n\n                sourceArray = new Uint8Array(this, begin, num);\n                targetArray.set(sourceArray);\n\n                return target;\n            };\n        })();\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * Helpers.\n     */\n\n    function toUtf8(str) {\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\n            str = unescape(encodeURIComponent(str));\n        }\n\n        return str;\n    }\n\n    function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n        var length = str.length,\n           buff = new ArrayBuffer(length),\n           arr = new Uint8Array(buff),\n           i;\n\n        for (i = 0; i < length; i += 1) {\n            arr[i] = str.charCodeAt(i);\n        }\n\n        return returnUInt8Array ? arr : buff;\n    }\n\n    function arrayBuffer2Utf8Str(buff) {\n        return String.fromCharCode.apply(null, new Uint8Array(buff));\n    }\n\n    function concatenateArrayBuffers(first, second, returnUInt8Array) {\n        var result = new Uint8Array(first.byteLength + second.byteLength);\n\n        result.set(new Uint8Array(first));\n        result.set(new Uint8Array(second), first.byteLength);\n\n        return returnUInt8Array ? result : result.buffer;\n    }\n\n    function hexToBinaryString(hex) {\n        var bytes = [],\n            length = hex.length,\n            x;\n\n        for (x = 0; x < length - 1; x += 2) {\n            bytes.push(parseInt(hex.substr(x, 2), 16));\n        }\n\n        return String.fromCharCode.apply(String, bytes);\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation.\n     *\n     * Use this class to perform an incremental md5, otherwise use the\n     * static methods instead.\n     */\n\n    function SparkMD5() {\n        // call reset to init the instance\n        this.reset();\n    }\n\n    /**\n     * Appends a string.\n     * A conversion will be applied if an utf8 string is detected.\n     *\n     * @param {String} str The string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.append = function (str) {\n        // Converts the string to utf8 bytes if necessary\n        // Then append as binary\n        this.appendBinary(toUtf8(str));\n\n        return this;\n    };\n\n    /**\n     * Appends a binary string.\n     *\n     * @param {String} contents The binary string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.appendBinary = function (contents) {\n        this._buff += contents;\n        this._length += contents.length;\n\n        var length = this._buff.length,\n            i;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n        }\n\n        this._buff = this._buff.substring(i - 64);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            i,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.reset = function () {\n        this._buff = '';\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.prototype.getState = function () {\n        return {\n            buff: this._buff,\n            length: this._length,\n            hash: this._hash.slice()\n        };\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.setState = function (state) {\n        this._buff = state.buff;\n        this._length = state.length;\n        this._hash = state.hash;\n\n        return this;\n    };\n\n    /**\n     * Releases memory used by the incremental buffer and other additional\n     * resources. If you plan to use the instance again, use reset instead.\n     */\n    SparkMD5.prototype.destroy = function () {\n        delete this._hash;\n        delete this._buff;\n        delete this._length;\n    };\n\n    /**\n     * Finish the final calculation based on the tail.\n     *\n     * @param {Array}  tail   The tail (will be modified)\n     * @param {Number} length The length of the remaining buffer\n     */\n    SparkMD5.prototype._finish = function (tail, length) {\n        var i = length,\n            tmp,\n            lo,\n            hi;\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(this._hash, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        tmp = this._length * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(this._hash, tail);\n    };\n\n    /**\n     * Performs the md5 hash on a string.\n     * A conversion will be applied if utf8 string is detected.\n     *\n     * @param {String}  str The string\n     * @param {Boolean} [raw] True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hash = function (str, raw) {\n        // Converts the string to utf8 bytes if necessary\n        // Then compute it using the binary function\n        return SparkMD5.hashBinary(toUtf8(str), raw);\n    };\n\n    /**\n     * Performs the md5 hash on a binary string.\n     *\n     * @param {String}  content The binary string\n     * @param {Boolean} [raw]     True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hashBinary = function (content, raw) {\n        var hash = md51(content),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation for array buffers.\n     *\n     * Use this class to perform an incremental md5 ONLY for array buffers.\n     */\n    SparkMD5.ArrayBuffer = function () {\n        // call reset to init the instance\n        this.reset();\n    };\n\n    /**\n     * Appends an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array to be appended\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n            length = buff.length,\n            i;\n\n        this._length += arr.byteLength;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n        }\n\n        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            i,\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.reset = function () {\n        this._buff = new Uint8Array(0);\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.ArrayBuffer.prototype.getState = function () {\n        var state = SparkMD5.prototype.getState.call(this);\n\n        // Convert buffer to a string\n        state.buff = arrayBuffer2Utf8Str(state.buff);\n\n        return state;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.setState = function (state) {\n        // Convert string to buffer\n        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n\n        return SparkMD5.prototype.setState.call(this, state);\n    };\n\n    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\n    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\n    /**\n     * Performs the md5 hash on an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array buffer\n     * @param {Boolean}     [raw] True to get the raw string, false to get the hex one\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n        var hash = md51_array(new Uint8Array(arr)),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    return SparkMD5;\n}));\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","on","handleFileChange","handleUpload","_v","percentage","slicePercentage","hashPercentage","uploadPercentage","_s","resultURL","_e","staticRenderFns","uploadFile","data","request","url","method","mergeFile","ChunkSize","MAXFileSize","name","container","file","filename","extension","hash","count","chunkList","spark","mounted","SparkMD5","methods","calculateMD5","reader","FileReader","readAsArrayBuffer","onload","e","calculatePercentage","length","append","target","result","end","self","close","cur","total","parseInt","files","size","$message","type","message","split","createFileChunk","fileChunkList","push","slice","uploadChunk","promises","forEach","item","index","fd","createFormData","promise","Promise","all","chunk","FormData","map","mergeRequest","res","chunkSize","code","component","factory","module","exports","undefined","hex_chr","md5cycle","x","k","a","b","c","d","md5blk","s","i","md5blks","charCodeAt","md5blk_array","md51","tail","tmp","lo","hi","n","state","substring","toString","match","md51_array","subarray","Uint8Array","rhex","j","hex","join","toUtf8","str","test","unescape","encodeURIComponent","utf8Str2ArrayBuffer","returnUInt8Array","buff","ArrayBuffer","arr","arrayBuffer2Utf8Str","String","fromCharCode","apply","concatenateArrayBuffers","first","second","byteLength","set","buffer","hexToBinaryString","bytes","substr","reset","y","lsw","msw","prototype","clamp","val","Math","max","min","from","to","num","targetArray","sourceArray","begin","appendBinary","contents","_buff","_length","_hash","raw","ret","_finish","getState","setState","destroy","hashBinary","content","call"],"sourceRoot":""}